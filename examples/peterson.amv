{
global bool flag0 = nu;
global bool flag1 = nu;

global int turn = 0;
global int counter = 0;

func void pZero() {
	flag0 = ya;
	turn = 1;

  bool flag1AndTurn1 = nu;
  if (flag1 == 1) {
    if (turn == 1) {
      flag1AndTurn1 = ya;
    } {};
  } {};

	while (flag1AndTurn1 == ya) {
		  // busy wait
	};

	// critical section
	int j = 5;
	while (j > 0) {
		counter++;
		j--;
	};
	// end of critical section
	flag0 = nu;
};

func void pOne() {
	flag1 = ya;
	turn = 0;

  bool flag0AndTurn0 = nu;
  if (flag0 == 1) {
    if (turn == 0) {
      flag0AndTurn0 = ya;
    } {};
  } {};


	while (flag0AndTurn0 == ya) {
		// busy wait
	};

	// critical section
	int m = 5;
	while (m > 0) {
		counter--;
		m--;
	};
	// end of critical section
	flag1 = nu;
};

func void test() {
	fork pZero();
	fork pOne();
	join;
	print counter;
};
test();
}
